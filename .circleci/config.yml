version: 2.1

workflows:
  version: 2
  build:
    jobs:
      - debug
#       - ngx-default
#       - ngx-psql-es-noi18n-mapsid
#       - ngx-gradle-fr
#       - ms-ngx-gateway-eureka
#       - ms-micro-eureka
#       - ms-micro-consul
#       - ngx-mongodb-kafka-cucumber
#       - ngx-session-cassandra-fr
#       - ngx-couchbase

executors:
  default-executor:
    docker:
      - image: circleci/openjdk:8-jdk-node-browsers
        environment:
          JAVA_TOOL_OPTIONS: "-Xmx4g"
#           NODE_OPTIONS: "--max_old_space_size=8192"
#           GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
          JHI_PROFILE: dev
          JHI_RUN_APP: 1
          JHI_PROTRACTOR: 0
          JHI_JDK: 8
          # if JHI_LIB_BRANCH value is release, use the release from Maven
          JHI_LIB_REPO: https://github.com/circleci-test-ix/jhipster.git
          JHI_LIB_BRANCH: master
          # if JHI_GEN_BRANCH value is release, use the release from NPM
          JHI_GEN_REPO: https://github.com/circleci-test-ix/generator-jhipster.git
          JHI_GEN_BRANCH: master
          # specific config
          SPRING_OUTPUT_ANSI_ENABLED: ALWAYS
          SPRING_JPA_SHOW_SQL: false
          JHI_DISABLE_WEBPACK_LOGS: true
          JHI_E2E_HEADLESS: true
          NG_CLI_ANALYTICS: "false"

commands: 
  build_steps:
    steps:
        - checkout
        - setup_remote_docker:
            docker_layer_caching: true
#         - restore_cache:
#             key: cachev1-{{ .Environment.CIRCLE_JOB }}
        - run:
            name: Set (Interpolated) Environment Variables
            command: |
              # Set the travis environment variables since they are used in various scripts
              echo 'export JHI_SCRIPTS='"$CIRCLE_WORKING_DIRECTORY/test-integration/scripts" >> $BASH_ENV
              echo 'export TRAVIS_BUILD_DIR='"$CIRCLE_WORKING_DIRECTORY" >> $BASH_ENV
              echo 'export TRAVIS_REPO_SLUG='"$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME" >> $BASH_ENV              
        - run:
            name: Before Install
            command: |
              #----------------------------------------------------------------------
              # Install all tools and check configuration
              #----------------------------------------------------------------------
              if [[ $JHI_JDK = '11' ]]; then
                  echo '*** Using OpenJDK 11'
                  sudo add-apt-repository ppa:openjdk-r/ppa
                  sudo apt-get update
                  sudo apt-get install -y openjdk-11-jdk
                  sudo update-java-alternatives -s java-1.11.0-openjdk-amd64
                  java -version
              else
                  echo '*** Using OpenJDK 8 by default'
              fi
              java -version
              export TZ=Australia/Canberra
              date
              #sudo /etc/init.d/mysql stop
              #sudo /etc/init.d/postgresql stop
              # Use this for Protractor
              #echo 'export DISPLAY=:99.0' >> $BASH_ENV
              #sh -e /etc/init.d/xvfb start
              # Update NPM
              #npm install -g npm
              # Install Yarn
              sudo npm install -g yarn
              $JHI_SCRIPTS/04-git-config.sh        
        - run:
            name: Install
            command: |
              #----------------------------------------------------------------------
              # Install JHipster and generate project+entities
              #----------------------------------------------------------------------
              sudo chown -R circleci:circleci /usr/local/lib/node_modules
              sudo chown -R circleci:circleci /usr/local/bin

              $JHI_SCRIPTS/10-install-jhipster.sh
              $JHI_SCRIPTS/11-generate-entities.sh
              $JHI_SCRIPTS/12-generate-project.sh
              $JHI_SCRIPTS/13-replace-version-generated-project.sh
              $JHI_SCRIPTS/14-jhipster-info.sh
              
              $JHI_SCRIPTS/20-docker-compose.sh
              $JHI_SCRIPTS/21-tests-backend.sh
              $JHI_SCRIPTS/22-tests-frontend.sh
              $JHI_SCRIPTS/23-package.sh
              $JHI_SCRIPTS/24-tests-e2e.sh
              $JHI_SCRIPTS/25-sonar-analyze.sh
        - run:
            name: Before Cache
            command: |
              rm -rf $HOME/.m2/repository/io/github/jhipster/jhipster-framework/
              rm -rf $HOME/.m2/repository/io/github/jhipster/jhipster-dependencies/
              rm -rf $HOME/.m2/repository/io/github/jhipster/jhipster-parent/
        - save_cache:
            key: cachev1-{{ .Environment.CIRCLE_JOB }}
            paths: 
              - ~/.m2
              - ~/.gradle
#         - run:
#             name: Script
#             command: |
#               #----------------------------------------------------------------------
#               # Launch tests
#               #----------------------------------------------------------------------
#               $JHI_SCRIPTS/20-docker-compose.sh
#               $JHI_SCRIPTS/21-tests-backend.sh
#               $JHI_SCRIPTS/22-tests-frontend.sh
#               $JHI_SCRIPTS/23-package.sh
#               $JHI_SCRIPTS/24-tests-e2e.sh
#               $JHI_SCRIPTS/25-sonar-analyze.sh
              
jobs:

  debug:
    machine:
      image: ubuntu-1604:201903-01
    environment:
#       JHI_PROFILE: dev
      JHI_RUN_APP: 1
#       JHI_PROTRACTOR: 0
      JHI_JDK: 8
      # if JHI_LIB_BRANCH value is release, use the release from Maven
      JHI_LIB_REPO: https://github.com/circleci-test-ix/jhipster.git
      JHI_LIB_BRANCH: master
      # if JHI_GEN_BRANCH value is release, use the release from NPM
      JHI_GEN_REPO: https://github.com/circleci-test-ix/generator-jhipster.git
      JHI_GEN_BRANCH: master
      # specific config
      SPRING_OUTPUT_ANSI_ENABLED: ALWAYS
      SPRING_JPA_SHOW_SQL: false
      JHI_DISABLE_WEBPACK_LOGS: true
      JHI_E2E_HEADLESS: true
      NG_CLI_ANALYTICS: "false"
      JHI_APP: ngx-default
      JHI_PROFILE: prod
      JHI_PROTRACTOR: 1
      JHI_ENTITY: sql
      JHI_SONAR: 1
    steps:
      - checkout
      - run:
          name: Set (Interpolated) Environment Variables
          command: |
            # Set the travis environment variables since they are used in various scripts
            echo 'export JHI_SCRIPTS='"$CIRCLE_WORKING_DIRECTORY/test-integration/scripts" >> $BASH_ENV
            echo 'export TRAVIS_BUILD_DIR='"$CIRCLE_WORKING_DIRECTORY" >> $BASH_ENV
            echo 'export TRAVIS_REPO_SLUG='"$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME" >> $BASH_ENV              
      - run:
          name: Before Install
          command: |
            #----------------------------------------------------------------------
            # Install all tools and check configuration
            #----------------------------------------------------------------------
            if [[ $JHI_JDK = '11' ]]; then
                echo '*** Using OpenJDK 11'
                sudo add-apt-repository ppa:openjdk-r/ppa
                sudo apt-get update
                sudo apt-get install -y openjdk-11-jdk
                sudo update-java-alternatives -s java-1.11.0-openjdk-amd64
                java -version
            else
                echo '*** Using OpenJDK 8 by default'
            fi
            java -version
            export TZ=Australia/Canberra
            date
            #sudo /etc/init.d/mysql stop
            #sudo /etc/init.d/postgresql stop
            # Use this for Protractor
            #echo 'export DISPLAY=:99.0' >> $BASH_ENV
            #sh -e /etc/init.d/xvfb start
            #curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
            #sudo apt-get install -y nodejs
            #curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
            #export NVM_DIR=$HOME/.nvm
            #source $NVM_DIR/nvm.sh
            #export NVM_DIR="/opt/circleci/.nvm"
            #[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            #nvm install 10.16.2
            # Update NPM
            #npm install -g npm
            # Install Yarn
            #npm install -g yarn
            $JHI_SCRIPTS/04-git-config.sh        
      - run:
          name: Install
          command: |
            #----------------------------------------------------------------------
            # Install JHipster and generate project+entities
            #----------------------------------------------------------------------
            #sudo chown -R circleci:circleci /usr/local/lib/node_modules
            #sudo chown -R circleci:circleci /usr/local/bin
            
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install 10.16.2

            echo "install jhipster"
            $JHI_SCRIPTS/10-install-jhipster.sh
            echo "generate entities"
            $JHI_SCRIPTS/11-generate-entities.sh
            echo "generate project"
            $JHI_SCRIPTS/12-generate-project.sh
            echo "replace version generated"
            $JHI_SCRIPTS/13-replace-version-generated-project.sh
            echo "jhipster info"
            $JHI_SCRIPTS/14-jhipster-info.sh

            $JHI_SCRIPTS/20-docker-compose.sh
            $JHI_SCRIPTS/21-tests-backend.sh
            $JHI_SCRIPTS/22-tests-frontend.sh
            $JHI_SCRIPTS/23-package.sh
            $JHI_SCRIPTS/24-tests-e2e.sh
            $JHI_SCRIPTS/25-sonar-analyze.sh
      - run:
          name: Before Cache
          command: |
            rm -rf $HOME/.m2/repository/io/github/jhipster/jhipster-framework/
            rm -rf $HOME/.m2/repository/io/github/jhipster/jhipster-dependencies/
            rm -rf $HOME/.m2/repository/io/github/jhipster/jhipster-parent/
      

  ngx-default:
    resource_class: large
    executor: default-executor
    environment:
      JHI_APP: ngx-default
      JHI_PROFILE: prod
      JHI_PROTRACTOR: 1
      JHI_ENTITY: sql
      JHI_SONAR: 1
    steps:
      - build_steps
      
  ngx-psql-es-noi18n-mapsid:
    executor: default-executor
    environment:
      JHI_APP: ngx-psql-es-noi18n-mapsid
      JHI_PROFILE: prod
      JHI_PROTRACTOR: 1
      JHI_ENTITY: sqlfull
    steps:
      - build_steps
      
  ngx-gradle-fr:
    executor: default-executor
    environment:
      JHI_APP: ngx-gradle-fr
      JHI_PROFILE: prod
      JHI_PROTRACTOR: 1
      JHI_ENTITY: sql
      JHI_WAR: 1
    steps:
      - build_steps
      
  ms-ngx-gateway-eureka:
    executor: default-executor
    environment:
      JHI_APP: ms-ngx-gateway-eureka
      JHI_ENTITY: sql
      JHI_WAR: 1
    steps:
      - build_steps
      
  ms-micro-eureka:
    executor: default-executor
    environment:
      JHI_APP: ms-micro-eureka
      JHI_ENTITY: micro
      JHI_WAR: 1
    steps:
      - build_steps
      
  ms-micro-consul:
    executor: default-executor
    environment:
      JHI_APP: ms-micro-consul
      JHI_ENTITY: micro
    steps:
      - build_steps
      
  ngx-mongodb-kafka-cucumber:
    executor: default-executor
    environment:
      JHI_APP: ngx-mongodb-kafka-cucumber
      JHI_ENTITY: mongodb
    steps:
      - build_steps
      
  ngx-session-cassandra-fr:
    executor: default-executor
    environment:
      JHI_APP: ngx-session-cassandra-fr
      JHI_ENTITY: cassandra
    steps:
      - build_steps
      
  ngx-couchbase:
    executor: default-executor
    environment:
      JHI_APP: ngx-couchbase
      JHI_PROFILE: prod
      JHI_ENTITY: couchbase
    steps:
      - build_steps   
